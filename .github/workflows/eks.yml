name: CI/CD Pipeline

on:
  push:
    branches:
      - main  
jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up AWS CLI securely using GitHub Secrets
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build and push frontend image if frontend files are modified
    - name: Build and Push frontend image
      if: contains(github.event.head_commit.message, 'frontend') || github.event.pusher.name == 'frontend'
      run: |
        IMAGE_TAG=latest  # Use the same tag as requested
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_FRONTEND }}:$IMAGE_TAG -f Dockerfile .
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_FRONTEND }}:$IMAGE_TAG
        echo "Frontend image pushed with tag $IMAGE_TAG"

    # Build and push backend image if backend files are modified
    - name: Build and Push backend image
      if: contains(github.event.head_commit.message, 'backend') || github.event.pusher.name == 'backend'
      run: |
        IMAGE_TAG=latest  # Use the same tag as requested
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_BACKEND }}:$IMAGE_TAG -f Dockerfile .
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_BACKEND }}:$IMAGE_TAG
        echo "Backend image pushed with tag $IMAGE_TAG"

  deploy_to_k8s:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up kubectl and configure Kubernetes credentials
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        kubectl-version: 'latest'

    - name: Set up kubeconfig
      run: |
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}  # Replace with your EKS cluster name

    # Apply frontend deployment if frontend image is built
    - name: Deploy frontend to Kubernetes
      if: contains(github.event.head_commit.message, 'frontend') || github.event.pusher.name == 'frontend'
      run: |
        kubectl set image deployment/frontend frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_FRONTEND }}:$IMAGE_TAG --record
        kubectl apply -f k8s/frontend-deployment.yaml

    # Apply backend deployment if backend image is built
    - name: Deploy backend to Kubernetes
      if: contains(github.event.head_commit.message, 'backend') || github.event.pusher.name == 'backend'
      run: |
        kubectl set image deployment/backend backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_BACKEND }}:$IMAGE_TAG --record
        kubectl apply -f k8s/backend-deployment.yaml
